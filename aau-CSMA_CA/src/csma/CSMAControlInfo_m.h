//
// Generated file, do not edit! Created by nedtool 5.2 from csma/CSMAControlInfo.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __CSMACONTROLINFO_M_H
#define __CSMACONTROLINFO_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "../3rdParty/MACAddress.h"
using namespace inet;
// }}

/**
 * Class generated from <tt>csma/CSMAControlInfo.msg:8</tt> by nedtool.
 * <pre>
 * packet CSMAControlInfo
 * {
 *     MACAddress src;
 *     MACAddress dest;
 * }
 * </pre>
 */
class CSMAControlInfo : public ::omnetpp::cPacket
{
  protected:
    MACAddress src;
    MACAddress dest;

  private:
    void copy(const CSMAControlInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CSMAControlInfo&);

  public:
    CSMAControlInfo(const char *name=nullptr, short kind=0);
    CSMAControlInfo(const CSMAControlInfo& other);
    virtual ~CSMAControlInfo();
    CSMAControlInfo& operator=(const CSMAControlInfo& other);
    virtual CSMAControlInfo *dup() const override {return new CSMAControlInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual MACAddress& getSrc();
    virtual const MACAddress& getSrc() const {return const_cast<CSMAControlInfo*>(this)->getSrc();}
    virtual void setSrc(const MACAddress& src);
    virtual MACAddress& getDest();
    virtual const MACAddress& getDest() const {return const_cast<CSMAControlInfo*>(this)->getDest();}
    virtual void setDest(const MACAddress& dest);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CSMAControlInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CSMAControlInfo& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CSMACONTROLINFO_M_H

