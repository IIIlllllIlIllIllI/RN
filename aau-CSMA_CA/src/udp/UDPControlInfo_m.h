//
// Generated file, do not edit! Created by nedtool 5.2 from udp/UDPControlInfo.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __UDPCONTROLINFO_M_H
#define __UDPCONTROLINFO_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0502
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
#include "../3rdParty/IPv4Address.h"
// }}

/**
 * Class generated from <tt>udp/UDPControlInfo.msg:27</tt> by nedtool.
 * <pre>
 * message UDPControlInfo
 * {
 *     inet::IPv4Address srcIP;	// source address
 *     int srcPort;	// source port
 * 
 *     inet::IPv4Address destIP;	// destination address
 *     int destPort;	// destination address
 * }
 * </pre>
 */
class UDPControlInfo : public ::omnetpp::cMessage
{
  protected:
    inet::IPv4Address srcIP;
    int srcPort;
    inet::IPv4Address destIP;
    int destPort;

  private:
    void copy(const UDPControlInfo& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const UDPControlInfo&);

  public:
    UDPControlInfo(const char *name=nullptr, short kind=0);
    UDPControlInfo(const UDPControlInfo& other);
    virtual ~UDPControlInfo();
    UDPControlInfo& operator=(const UDPControlInfo& other);
    virtual UDPControlInfo *dup() const override {return new UDPControlInfo(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual inet::IPv4Address& getSrcIP();
    virtual const inet::IPv4Address& getSrcIP() const {return const_cast<UDPControlInfo*>(this)->getSrcIP();}
    virtual void setSrcIP(const inet::IPv4Address& srcIP);
    virtual int getSrcPort() const;
    virtual void setSrcPort(int srcPort);
    virtual inet::IPv4Address& getDestIP();
    virtual const inet::IPv4Address& getDestIP() const {return const_cast<UDPControlInfo*>(this)->getDestIP();}
    virtual void setDestIP(const inet::IPv4Address& destIP);
    virtual int getDestPort() const;
    virtual void setDestPort(int destPort);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const UDPControlInfo& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, UDPControlInfo& obj) {obj.parsimUnpack(b);}


#endif // ifndef __UDPCONTROLINFO_M_H

